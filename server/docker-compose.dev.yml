version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: kuji-db-dev
    environment:
      POSTGRES_USER: kuji_user
      POSTGRES_PASSWORD: kuji_dev_password
      POSTGRES_DB: create_kuji_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kuji_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kuji-network

  # Node.js Server
  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: kuji-server-dev
    environment:
      # Database
      DATABASE_URL: "postgresql://kuji_user:kuji_dev_password@postgres:5432/create_kuji_db?schema=public"
      
      # JWT Secrets (dev values - change for production!)
      JWT_ACCESS_SECRET: "dev-jwt-access-secret-change-me"
      JWT_REFRESH_SECRET: "dev-jwt-refresh-secret-change-me"
      
      # Server Config
      PORT: 3001
      NODE_ENV: "development"
      FRONTEND_URL: "http://localhost:5173"
      
      # Email Service (Ethereal for development testing)
      EMAIL_HOST: "smtp.ethereal.email"
      EMAIL_PORT: 587
      EMAIL_USER: "your-ethereal-user"
      EMAIL_PASS: "your-ethereal-password"
      EMAIL_FROM: "noreply@create-kuji.local"
      
      # Optional: hCaptcha (can be empty for dev)
      HCAPTCHA_SECRET: ""
      
      # Optional: OAuth Providers (add as needed)
      GOOGLE_CLIENT_ID: ""
      GOOGLE_CLIENT_SECRET: ""
      GITHUB_CLIENT_ID: ""
      GITHUB_CLIENT_SECRET: ""
      DISCORD_CLIENT_ID: ""
      DISCORD_CLIENT_SECRET: ""
      
      # Super Admin Setup
      SUPER_ADMIN_EMAIL: "admin@example.com"
      SUPER_ADMIN_USERNAME: "admin"
      
    ports:
      - "3001:3001"
    volumes:
      # Mount source code for hot-reloading
      - ./src:/app/src:ro
      - ./prisma:/app/prisma:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      # Mount node_modules as anonymous volume to prevent overwriting
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kuji-network
    command: sh -c "npx prisma migrate deploy && npm run dev"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  kuji-network:
    driver: bridge
